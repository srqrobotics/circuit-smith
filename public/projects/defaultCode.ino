[
  "#include <DHT.h>",
  "#include <Wire.h>",
  "#include <LiquidCrystal_I2C.h>",
  "#include <Servo.h>",
  "",
  "#define DHTPIN 2           // DHT22 data pin",
  "#define DHTTYPE DHT22      // DHT22 type",
  "#define PIRPIN 3           // PIR sensor data pin",
  "#define LDRPIN A0          // LDR sensor pin",
  "#define TRIGPIN 5          // Ultrasonic trigger pin",
  "#define ECHOPIN 6          // Ultrasonic echo pin",
  "#define SERVO_PIN 4        // Servo control pin",
  "",
  "DHT dht(DHTPIN, DHTTYPE);",
  "LiquidCrystal_I2C lcd(0x27, 16, 2);",
  "Servo myServo;",
  "",
  "void setup() {",
  "    Serial.begin(9600);",
  "",
  "    // Initialize DHT sensor",
  "    dht.begin();",
  "",
  "    // Initialize LCD",
  "    lcd.begin();",
  "    lcd.backlight();",
  "",
  "    // Initialize Servo",
  "    myServo.attach(SERVO_PIN);",
  "    myServo.write(0);  // Initially set to 0 degrees",
  "",
  "    // Setup PIR input",
  "    pinMode(PIRPIN, INPUT);",
  "",
  "    // Setup Ultrasonic pins",
  "    pinMode(TRIGPIN, OUTPUT);",
  "    pinMode(ECHOPIN, INPUT);",
  "",
  "    // Display initial message on LCD",
  "    lcd.setCursor(0, 0);",
  "    lcd.print(\"Security System\");",
  "    lcd.setCursor(0, 1);",
  "    lcd.print(\"Initializing...\");",
  "    delay(2000);",
  "}",
  "",
  "void loop() {",
  "    // Check for motion",
  "    if(digitalRead(PIRPIN) == HIGH) {",
  "        lcd.clear();",
  "        lcd.setCursor(0, 0);",
  "        lcd.print(\"Motion Detected!\");",
  "        ",
  "        // Trigger ultrasonic sensor to measure distance",
  "        long duration, distance;",
  "        digitalWrite(TRIGPIN, LOW);",
  "        delayMicroseconds(2);",
  "        digitalWrite(TRIGPIN, HIGH);",
  "        delayMicroseconds(10);",
  "        digitalWrite(TRIGPIN, LOW);",
  "",
  "        duration = pulseIn(ECHOPIN, HIGH);",
  "        distance = duration * 0.034 / 2; // Calculate distance in cm",
  "",
  "        Serial.print(\"Distance: \");",
  "        Serial.print(distance);",
  "        Serial.println(\" cm\");",
  "",
  "        // Check distance and perform actions",
  "        if(distance < 50) {",
  "            myServo.write(90); // Move servo to 90 degrees",
  "            lcd.setCursor(0, 1);",
  "            lcd.print(\"Distance: <50cm\");",
  "        } else {",
  "            myServo.write(0); // Move servo back to 0 degrees",
  "            lcd.setCursor(0, 1);",
  "            lcd.print(\"Distance: OK\");",
  "        }",
  "        ",
  "        delay(2000); // Wait for 2 seconds before next checking",
  "    } else {",
  "        lcd.clear();",
  "        lcd.setCursor(0, 0);",
  "        lcd.print(\"No Motion.\");",
  "    }",
  "",
  "    // Read temperature and humidity data",
  "    float humidity = dht.readHumidity();",
  "    float temperature = dht.readTemperature();",
  "",
  "    if (isnan(humidity) || isnan(temperature)) {",
  "        lcd.setCursor(0, 1);",
  "        lcd.print(\"DHT Error!\");",
  "    } else {",
  "        lcd.setCursor(0, 1);",
  "        lcd.print(\"T:\");",
  "        lcd.print(temperature);",
  "        lcd.print(\"C H:\");",
  "        lcd.print(humidity);",
  "        lcd.print(\"%\");",
  "    }",
  "    delay(2000); // Delay for readability",
  "}"
]