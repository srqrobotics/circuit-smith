[
  "#include <DHT.h>",
  "#include <Wire.h>",
  "#include <LiquidCrystal_I2C.h>",
  "",
  "// Pin Definitions",
  "#define DHT_PIN 2",
  "#define PIR_PIN 5",
  "#define LDR_PIN A0",
  "#define DHT_TYPE DHT22",
  "",
  "// Initialize DHT sensor",
  "DHT dht(DHT_PIN, DHT_TYPE);",
  "",
  "// Initialize I2C LCD",
  "LiquidCrystal_I2C lcd(0x27, 16, 2); ",
  "",
  "void setup() {",
  "  // Start Serial communication for debugging",
  "  Serial.begin(9600);",
  "",
  "  // Initialize DHT sensor",
  "  dht.begin();",
  "",
  "  // Initialize I2C LCD",
  "  lcd.begin();",
  "  lcd.backlight();",
  "",
  "  // Inform system startup",
  "  Serial.println(\"Smart Greenhouse Monitor Initialized\");",
  "}",
  "",
  "void loop() {",
  "  // Read Temperature and Humidity from DHT22",
  "  float humidity = dht.readHumidity();",
  "  float temperature = dht.readTemperature();",
  "",
  "  // Check if any reads failed and exit early (to try again).",
  "  if (isnan(humidity) || isnan(temperature)) {",
  "    Serial.println(\"Failed to read from DHT sensor!\");",
  "    return;",
  "  }",
  "",
  "  // Read Light Level from LDR",
  "  int ldrValue = analogRead(LDR_PIN);",
  "",
  "  // Read state of the PIR sensor",
  "  int pirState = digitalRead(PIR_PIN);",
  "",
  "  // Display Data on LCD",
  "  lcd.clear();",
  "  lcd.setCursor(0, 0);",
  "  lcd.print(\"Temp: \" + String(temperature) + \" C\");",
  "  lcd.setCursor(0, 1);",
  "  lcd.print(\"Humidity: \" + String(humidity) + \" %\");",
  "",
  "  // Debug Serial Monitor",
  "  Serial.print(\"Temp: \");",
  "  Serial.print(temperature);",
  "  Serial.print(\" C, Humidity: \");",
  "  Serial.print(humidity);",
  "  Serial.print(\"%, LDR Value: \");",
  "  Serial.print(ldrValue);",
  "  Serial.print(\", PIR State: \");",
  "  Serial.println(pirState);",
  "",
  "  // Check for environmental conditions",
  "  if (temperature > 30 || humidity < 40 || ldrValue < 100) {",
  "    generateNotification();",
  "  }",
  "",
  "  // Delay before the next loop",
  "  delay(2000);",
  "}",
  "",
  "// Function to send notification",
  "void generateNotification() {",
  "  Serial.println(\"Alert! Environmental conditions are out of range!\");",
  "}"
]